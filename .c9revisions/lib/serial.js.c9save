{"ts":1359687128041,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1359687128703,"patch":[[{"diffs":[[1,"/**\nCopyright 2012 Google Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nAuthor: Renato Mangini (mangini@chromium.org)\nAuthor: Luis Leao (luisleao@gmail.com)\n**/\n\nvar serial_lib=(function() {\n  \n  var connectionInfo;\n  var readListener;\n  var dataRead;\n  \n  var logObj=function(obj) {\n    console.log(obj);\n  }\n  var log=function(msg) {\n    console.log(msg);\n  };\n  \n  \n  var startListening=function(callback) {\n    if (!connectionInfo || !connectionInfo.connectionId) {\n      throw new \"You must call openSerial first!\";\n    }\n    readListener=callback;\n    dataRead=''; \n    onCharRead();\n  }\n\n  var onCharRead=function(readInfo) {\n    if (!readListener || !connectionInfo) {\n      return;\n    }\n    if (readInfo && readInfo.bytesRead>0 && readInfo.data) {\n      var str=ab2str(readInfo.data);\n      if (str[str.length-1]==='\\n') {\n        dataRead+=str.substring(0, str.length-1);\n        onRead(dataRead);\n        dataRead=\"\"; \n      } else {\n        dataRead+=str;\n      }\n    }\n    chrome.serial.read(connectionInfo.connectionId, 1, onCharRead);\n  }\n\n  var getPorts=function(callback) {\n    chrome.serial.getPorts(callback);\n  };\n  \n  var openSerial=function(serialPort, callback) {\n    chrome.serial.open(serialPort, function(cInfo) {\n     onOpen(cInfo, callback)\n    });\n  };\n  \n  var onOpen=function(cInfo, callback) {\n    if (!cInfo || !cInfo.connectionId || cInfo.connectionId<0) {\n      logObj(cInfo);\n      throw \"could not find device (connectionInfo=\"+cInfo+\")\";\n    } else {\n      connectionInfo=cInfo;\n      logObj(cInfo);\n      if (callback) callback(cInfo);\n    }\n  };\n  \n  var writeSerial=function(str) {\n    chrome.serial.write(connectionInfo.connectionId, str2ab(str), onWrite); \n  }\n  \n  var onWrite=function(obj) {\n  }\n  \n  var onRead=function(readInfo) {\n    if (readListener) readListener(readInfo);\n  };\n\n  /* the arraybuffer is interpreted as an array of UTF-8 (1-byte Unicode chars) */\n  var ab2str=function(buf) {\n    var bufView=new Uint8Array(buf);\n    var unis=[];\n    for (var i=0; i<bufView.length; i++) {\n      unis.push(bufView[i]);\n    }\n    return String.fromCharCode.apply(null, unis);\n  };\n\n\n  var str2ab=function(str) {\n    var buf=new ArrayBuffer(str.length);\n    var bufView=new Uint8Array(buf);\n    for (var i=0; i<str.length; i++) {\n      bufView[i]=str.charCodeAt(i);\n    }\n    return buf;\n  }\n \n \n  var closeSerial=function(callback) {\n   if (connectionInfo) {\n     chrome.serial.close(connectionInfo.connectionId, \n      function(result) {\n        onClose(result, callback);\n      });\n    }\n  };\n  \n  var onClose = function(result, callback) {\n   connectionInfo=null;\n   if (callback) callback(result);\n  };\n  \n  var isConnected = function() {\n    return connectionInfo!=null && connectionInfo.connectionId>=0;\n  };\n\n  return {\n    \"getPorts\": getPorts,\n    \"openSerial\": openSerial,\n    \"isConnected\": isConnected,\n    \"startListening\": startListening,\n    \"writeSerial\": writeSerial,\n    \"closeSerial\": closeSerial\n  }\n})();\n"]],"start1":0,"start2":0,"length1":0,"length2":3461}]],"length":3461,"saved":false}
{"ts":1359687202821,"patch":[[{"diffs":[[0,"bj);\n  }"],[1,";"],[0,"\n"],[-1,""],[0,"  var lo"]],"start1":787,"start2":787,"length1":17,"length2":18},{"diffs":[[0,"rRead();\n  }"],[1,";"],[0,"\n\n  var onCh"]],"start1":1068,"start2":1068,"length1":24,"length2":25},{"diffs":[[0,"ad);\n  }"],[1,";"],[0,"\n\n  var "]],"start1":1534,"start2":1534,"length1":16,"length2":17},{"diffs":[[0,"allback)"],[1,";"],[0,"\n    });"]],"start1":1750,"start2":1750,"length1":16,"length2":17},{"diffs":[[0,"Write); \n  }"],[1,";"],[0,"\n  \n  var on"]],"start1":2182,"start2":2182,"length1":24,"length2":25},{"diffs":[[0,"j) {\n  }"],[1,";"],[0,"\n  \n  va"]],"start1":2224,"start2":2224,"length1":16,"length2":17},{"diffs":[[0,"buf;\n  }"],[1,";"],[0,"\n \n \n  v"]],"start1":2823,"start2":2823,"length1":16,"length2":17},{"diffs":[[0,"eSerial\n"],[-1,""],[0,"  }"],[1,";"],[0,"\n})();\n"]],"start1":3450,"start2":3450,"length1":18,"length2":19}]],"length":3469,"saved":false}
{"ts":1359691078900,"patch":[[{"diffs":[[0,"  throw "],[-1,"new "],[0,"\"You mus"]],"start1":961,"start2":961,"length1":20,"length2":16}]],"length":3465,"saved":false}
